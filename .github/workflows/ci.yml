name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, airflow_docker_pipelines]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
        env:
          PATH: ${{ runner.env.PATH }}:/home/runner/.local/bin

      - name: Install Dependencies
        run: |
          cd ${{ matrix.service }}
          poetry install

      - name: Run Backend Unit Tests
        if: matrix.service == 'backend'
        run: |
          cd backend
          poetry run pytest Unit_Tests --disable-warnings

      - name: Run Airflow DAG Integrity Tests
        if: matrix.service == 'airflow_docker_pipelines'
        run: |
          cd airflow_docker_pipelines
          poetry run pytest Unit_Tests --disable-warnings


  build-and-push-docker-images:
    runs-on: ubuntu-latest
    needs: run-tests
    strategy:
      matrix:
        service: [backend, airflow_docker_pipelines, frontend]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest ${{ matrix.service }}

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:latest
